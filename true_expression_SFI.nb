(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    177967,       3858]
NotebookOptionsPosition[    174027,       3789]
NotebookOutlinePosition[    174428,       3805]
CellTagsIndexPosition[    174385,       3802]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{"F0", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"k", "*", 
          RowBox[{"t", "/", "\[Gamma]"}]}], "]"}], "*", "k", "*", "\[Tau]"}], 
       "  ", "-", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"t", "/", "\[Tau]"}], "]"}], "*", "\[Gamma]"}]}], ")"}], "^",
      "2"}]}], 
   RowBox[{"k", "*", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "-", 
      RowBox[{"k", "*", "\[Tau]"}]}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.952616649414888*^9, 3.952616720213339*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8108cf98-d0ae-4a61-9189-c83e9ddd2c88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", "k", "*", "t"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"k", "*", "\[Beta]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9526167238910427`*^9, 3.952616745494596*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"83a0da8b-1354-4c93-bf50-846c5d65a4a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Sigma]", "'"}], "[", "t", "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "t", "]"}], "^", "2"}]]}], " ", "+", " ", 
     FractionBox[
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], " ", "-", " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"\[Mu]", "'"}], "[", "t", "]"}]}], 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "t", "]"}], "^", "2"}]}]]}], ")"}], "^", 
   "2"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.952616751824576*^9, 3.952616839339044*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"593c5aac-5d4f-423d-b955-bfcac5357fbf"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "k", " ", "t"}]], " ", "k"}], "-", 
       FractionBox[
        RowBox[{"F0", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "\[Tau]"}]]}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
            "\[Tau]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "\[Tau]"]}], 
           "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", 
             SuperscriptBox["k", "2"], " ", "\[Tau]"}], "\[Gamma]"]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"F0", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
                 "\[Tau]"}]}], ")"}], "2"]}], 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Gamma]"}], "+", 
               RowBox[{"k", " ", "\[Tau]"}]}], ")"}]}]], "+", 
           RowBox[{"x", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"\[Gamma]", "-", 
         RowBox[{"k", " ", "\[Tau]"}]}]]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "k", " ", "t"}]]}], ")"}], "4"]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9526168584544077`*^9, 3.952616860313675*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"eebdc3e1-5994-4f8c-bb40-cdb8dd546440"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " "}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "k", " ", "t"}]]}], ")"}], "4"]], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "k", " ", "t"}]], " ", "k"}], "-", 
     FractionBox[
      RowBox[{"F0", " ", "\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "\[Tau]"}]]}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
          "\[Tau]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "\[Tau]"]}], 
         "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", 
           SuperscriptBox["k", "2"], " ", "\[Tau]"}], "\[Gamma]"]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"F0", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
               "\[Tau]"}]}], ")"}], "2"]}], 
          RowBox[{"k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"k", " ", "\[Tau]"}]}], ")"}]}]], "+", 
         RowBox[{"x", "[", "t", "]"}]}], ")"}]}], 
      RowBox[{"\[Gamma]", "-", 
       RowBox[{"k", " ", "\[Tau]"}]}]]}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.9526168733512173`*^9, 
  3.952616875250946*^9}},ExpressionUUID->"bf55ebea-7e6e-41f9-93d5-\
df495f4dfea6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"k", "*", 
        RowBox[{"x", "[", "t", "]"}]}], " ", "-", " ", 
       RowBox[{"F0", "*", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "\[Tau]"}], "]"}]}], ")"}]}]}], "==", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.952616897228547*^9, 3.9526169354569607`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"6b7865b8-7ac7-4293-93ef-724542948249"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"k", " ", "t"}], "\[Gamma]"]}], "-", 
        FractionBox["t", "\[Tau]"]}]], " ", "F0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox[
             RowBox[{"k", " ", "t"}], "\[Gamma]"], "+", 
            FractionBox["t", "\[Tau]"]}]]}], " ", "\[Gamma]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", "\[Tau]"}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           FractionBox[
            RowBox[{"k", " ", "t"}], "\[Gamma]"], "+", 
           FractionBox["t", "\[Tau]"]}]], " ", "k", " ", "\[Tau]"}]}], 
       ")"}]}], 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{"k", " ", "\[Tau]"}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.952616936992364*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"5a70d00b-278c-4bdf-8506-891e5bacd714"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"], " "}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "k", " ", "t"}]]}], ")"}], "4"]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "k", " ", "t"}]], " ", "k"}], "-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Gamma]", "-", 
          RowBox[{"k", " ", "\[Tau]"}]}]], 
        RowBox[{"F0", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "\[Tau]"}]]}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
            "\[Tau]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "\[Tau]"]}], 
           "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", 
             SuperscriptBox["k", "2"], " ", "\[Tau]"}], "\[Gamma]"]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"F0", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
                 "\[Tau]"}]}], ")"}], "2"]}], 
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Gamma]"}], "+", 
               RowBox[{"k", " ", "\[Tau]"}]}], ")"}]}]], "+", 
           RowBox[{"x", "[", "t", "]"}]}], ")"}]}]}]}], ")"}], "2"]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "->", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"k", " ", "t"}], "\[Gamma]"]}], "-", 
         FractionBox["t", "\[Tau]"]}]], " ", "F0", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             FractionBox[
              RowBox[{"k", " ", "t"}], "\[Gamma]"], "+", 
             FractionBox["t", "\[Tau]"]}]]}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", "\[Tau]"}], 
         "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox[
             RowBox[{"k", " ", "t"}], "\[Gamma]"], "+", 
            FractionBox["t", "\[Tau]"]}]], " ", "k", " ", "\[Tau]"}]}], 
        ")"}]}], 
      RowBox[{"k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{"k", " ", "\[Tau]"}]}], ")"}]}]]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.952616949349757*^9, 3.952616969680684*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2c0ccf91-e737-4273-802a-06c36c167f83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "t"}]]}], ")"}], "4"]], "4", 
     " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "k", " ", "t"}]], " ", 
         SuperscriptBox["k", "2"]}], "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"\[Gamma]", " ", "\[Tau]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "-", 
              RowBox[{"k", " ", "\[Tau]"}]}], ")"}], "2"]}]], 
         RowBox[{
          SuperscriptBox["F0", "2"], " ", "\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "\[Tau]"}]], " ", "\[Gamma]"}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", "k", " ", 
             "\[Tau]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "\[Tau]"}]], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"k", " ", "t"}], "\[Gamma]"]], " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["\[Tau]", "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"2", " ", "t"}], "\[Tau]"]], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"k", " ", "\[Tau]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox["t", "\[Tau]"]}]], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"2", " ", "k", " ", "t"}], "\[Gamma]"]], " ", "k", 
                " ", "\[Tau]"}]}], ")"}]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"k", " ", "t"}], "\[Gamma]"]}]], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"t", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox["k", "\[Gamma]"], "+", 
                    FractionBox["1", "\[Tau]"]}], ")"}]}]], " ", "k", " ", 
                "\[Tau]"}]}], ")"}]}]}], ")"}]}]}]}], ")"}], "2"]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]", "->", "1"}], ",", 
      RowBox[{"k", "->", "1"}], ",", 
      RowBox[{"\[Tau]", "->", "1"}], ",", 
      RowBox[{"F0", "->", "1"}], ",", 
      RowBox[{"\[Gamma]", "->", "0.99"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9526169796052732`*^9, 3.952617038076002*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e8cf3272-32a8-433a-a7f1-8d00dfb75b10"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwUW3c8l98Xt/f8fD5lZIaIsipZued5Pmboa6dCJUIkJEWSIiIkIxlZqRQy
QpFsZZQQsjKy997r5/fXfZ3XPeN93uc+59z7xyNsfcPIloqCgkKWjoLi/+tL
H2s6OZsnau/ffO/61GSpUf1bSO+skAPi5TX/Q8s2jO1+K/UTEvJEKjo/8QK2
1xhbRGEOU8dDlMqzfdzllS/2sjxUkFYoCIn5us7/YrPFjszahO3aPUWR1ONl
9GCI/WVL3Nn6E4EcZJq7eV4BJvqGUWFjMxqJNAvrvV6Ww5xO3bq+KhiLttce
9ReximEfW/vTlsgJSHWsXX1HmxfbcNTrmbdLQsFzLeG31TixZMqeoFWNFOQf
Q/cwOZQeU//5TGzlTyoy/n3jaWMyBTb2QqtiySENeRD4c7RE1yDEZtticfM1
avouZyK1MA+ysh/X5kPfIr7PFyPMVSbh96Z91JzgO/RrNWRWj2EYPL4LyM7m
vkeN4XwOAr79wBvZ2jBNzkQ/SbTd/0EXlFoF2021ZaGDh879QKJtYC0J1JN2
2SjCflzk0slmoNr0+rXknYOkNoJP6Rn9gNZ+U/4ljVz0Pqvduv3Bd3jzTdZx
kS0PHaoy9zLMrII7mcxFC3/ykL1HeEDP83I4HTFCt5D8EcWbevDIHCkBvjsV
JvMO+UjoPe13HeJnmLFMSJ2TL0BX31eIHs7Lh3Ly7bnZzQIUhNTWfQZzIeKw
kdpsdSEKfPZzm31fNtiwHw2ZCf2EZAMmPlYJZ4DCMn3XtNlnlHKAX2yp7i3Q
d/8TnxYsQjpeM6zN82nQUf711tRYEbptuvr4iF8qvH/zomoytxhFhrkkKjgl
g3fITc5Jry+oLiPAmPPUSzjjdubiBLkEMVqXZ7XzxYGQ+eGscZavyG7fG7Zw
mxhYOEWzOdb2FXFOdZy5RRMN1SJ92mOJpWhOPG/89mwEPGcsfj5qV4ZuB/S8
L+F9Bvm3T7vd5C5H+u1agVc2wiBh4iTPonc5Yr9U8+iWQAg8shQrdxsoRwO7
hSzdUUHg3ESwW9CoQIysQX8+GwXCWTIFm9v7CvTrtFBL25lHAIXT+fNslcjD
aOyTyQM/OHy4+4LrzUoUXsZW5jX4AAgJtVTzfyqR8te+LN8bvrDJVvjORbUK
3Zoqju4AHxh68MpgLrkKPY67zDkweBd+LoWv3qCtRjsVP3XflHtCoZ1P4qxD
NYrsS7qd1XQbkrocNW40VqMV7HuHAZsHPNY/NzUjX4Ni5wI5UtzdwbVcM9I5
pgYZp/Tq6e66wfljx5VnNmuQ5tz3B37vXYH8Rnjg+qVvSMntx+a8mwsc4WF/
PF39DdkEvr2tleEM+0K2pK8f/o6WaFr1NpKcYGdnvG0q9Dvavmmra1l2DUZd
/3g7LXxHFycjekxpHaBpqFpkyqwWBaidOn3K2Q5S6pNcJwXr0FOiIOXRBBtY
elEg2RdSh6iNI3N7sCugadcw2LJeh2alihbOU1tD7ImBhG9X65F8k4wGXe8l
mKJeNS3+XY84e1AoS9JFQC0s7B+gAZHdAh4/yrCEiOSDtSlZDajqNj/t578X
QPHUGeWgwB9I6Ux0tdwbc3jCbLPovfQDjWWKdpYqnIXeTs9Ml8s/keDvK4I+
A6Ygl/7U1qbxJ7rKr5+qkmYC/h6vBcxVGlF9LcXUurcx/FH/8kc3vRFFC9Fz
TTkYgSSxORzt+4XaaChjXBwMoSl7i0p89hfCc88pNB3/DwiI0YpVugm5jPHy
REXog8qhKOVAmyZURIz7I8msBzasglyU8U0orUfkVUjCaQhberfo1dyE3q7H
zvWq68Dn7uNNS/TNaNHzIp0LlTYMVJZlOqs1oxtuN+g+/taE48/abK0zmtFf
J+rq0gx1sLpzCe8ZaEbv+ny5GXLIEHhxUsCMuwUdEpGT3K3EoesoZYfOoxaE
1kGXghMD6n0h+VVfWhB3/mY6nAY4srX/2amFFiRJcb5Whh/B/fojp+Uu/kZl
Y9t3zzuqQnrup0MZ0b/RnYx+n1PSKtDyAqcW+/EbnRZSEeeiUgZRO/MSbqVW
1E1F+uDZcRLOnBl8EXGjFT1A9rbcnQpw+4TzLZY3rSiH3ta4feQE1FP7S1MQ
2xC9U9SNp4eOw9IEG7OXTht6+9niL9/ZY8DfEju6eL8NfYk72T35TB5ckrOT
R6fakD3DI4clETmIC1S+d1mkHemTxXp4vGShyrnmXPe5dtTb2qP1IUcG9p/q
Jvz61o4ObINHotlRANGrs9rb7Sg/Zn+Os9oRcGCeb6g89gcJLV/LFD4mBSWd
dI8Kk/+gioxmURc4DCPlzy7L/vmDpnK1/347KwHs6Xxq71k7kOc+Dv1bnuJg
7SG/+tKrA006yNz41CkGIZZff3PldiC/x5GPznCJQYG6ds6z0Q60YaRORbYU
BQailcMjk06kz0/NGEshAh+yg7qdpLtQxIDL0vM4IZggTIScvtyFSPnWHT48
QiDucVpNIqoLffDrMotUFoRkVeaUwfUu5OTCrXXOlh96khyNKo50Iwc3VeqS
QD7gof5BnXSxG9EW3/+rnXcAIupCrp6v6UbSfceuegvwQuORaS7FtW5kVmPX
fPciDzCH69ftk+pBFv3aZmZvucHfjO1Ic3gPMn3vZ+d5mgs8Bp/Oa1n8RTtu
b2zU/pAgT3MuVezpX3RNM/NfhRYJZt8ZmFBX/kXFaWolR74Swd6F81OpeC96
0H5vbKGAAGm/Xe0Tzvei9k+BHPOKBBhQaOHxCu1FybFa1HzlnHB+O8L7xGIv
0mP/qWfSxQHPLy0eJR7qQ0uKtCdI1zngd5Vx35x5H3JRbO22peYAvWASnlna
h2y4WMwd3dkgibnBj1OjH9UZHGBSiGMGtVN3LXyt+tG758NM/+aZoMdZ6sTs
7X6kWzIX3naGCbhbnoz8eN+PWGnX4lu4GKGQWrVMpbofZf7bbff1YwCTE1Mx
7//2I4Pt+7/LFunh2Qs9ncccA0i7eP99/QE6kK3fEl49PIAscsxo/7Oig8bN
zA1b8gCqIpa1avbRAtNF1kyyxwBqGWoOfTpFA35ijWy73QNobtWullmOGg6e
9Rm9vjyAfv+756BSTwXlj6XLe9j+ofuk0Grnq1SwNRnmWoz9QwLa8V+831LC
rbz/Wm+9/YdSaMtMPuhQAGloN3Oo/B+yNb0k0zW3i/L25Twy7vqH2gqcoraN
dtHMHY6TcqyDyJOyQ+2V6A6yQ82xU26DKOKZ4WTO+iaiSF0p7n4yiJQ6gwV4
7m6iFzR8PfVpg2goo2xhZ3cD1dZdFXjXPohkmuR+9BA3kITJVqqt8hDqeGDa
RL68hsoLhatNjIeQ0s0vRUubq8icR2uY7DSEkv897XCMXUWPe5+JH0wcQipB
9T4Xe1bQmL14Zi/lMBpJ1TC08V1Gvg16P3/yDiO9i6LlOjLLiFvababk2DDq
qeeXduxfQtqLJbLxtsPIgInlg7jOEnp3z6jgbN2efXk/O9OxRYT3327X/DeM
9F8IBJ1ZWEBd+MvVE5vDiE/C4+7VjwuIiWFMiXR0BKn3tr0ZUl5A1yLulTaF
jyARrZ+965bziGo5ta/s3QiS+dnJ/klyHsWdraXIrhxBekwnS9fW5lA9H5Ec
ujSCBpQyjcdi55D1fUUbb9ZRlOEteTbAaQ5tDFg+cjw0ikwtLrAEwRySepv+
Xcd8FCWJOKSizllUzdg4pug6ivyu+ZrqBc0iC6dFRongUSTHJBAyqTKLQuTU
9OhKRtGrRA++nPQZNPXld1Ol4BgqCPpdyZk0jfwF1udzFcfQuKMm8Yb1NOJ7
IEBMMRxDq7bxX+glppGepoPpfb8xFB/CfvN70RQaSg/zcE4YQ4av+9/+fTSF
vJnzYywLxpBkwqe7rCZTKKtpp1NldAw9KeY4n7AyiTSPiW5KUowjokrOzen6
SdQbrcPHyzOOIlf5tVRTJhHbhSirtdPjqMtPcb3YeBK9+Vp0f/TKOHqvfDS2
T2YSqQn1Jbd7j6Mk3Rq3SdZJ5Dx8eDD/wziiOnG//fWvCdRv1clQUTeOGM/R
Cm7kTCDjjsfSP4fGUXxLVItH1AT6Zqho0rk7jnCdp1e4vCaQYsOo5zDvBAo4
uJ355/IEylCPSZo/MYGyte3mP+pOIIFSzZptgwkk8+hnZ/rJCRR+cmWC0WkC
XSB+cf8oNoGoc19z7A+cQB23PE4075tAHpKmCgdTJxDDhP7iLv0EGntFYyH9
dQ9Xyu7Yqa1xdIE//4FyxwR6bqCaH7QwjhqfX3mruTiB7mRrmP6bGEfAQfxp
xDaJdk68kdYaHkcfgyoXrA5PIvt3NLSfB8bRIWo3bkf1SaSOcewe7x9HL7yF
1W5fnEQxyYGvS/dkppWmK35ek+hAn/mg6eA4unfDN+hp9CR6vdBNuzU6jubG
ZLLjcybR86diX/NmxpG1dV/r24ZJNJzmzue9Oo5au8M2Po5MorOUn+POU00g
LVM1oXLKKbT2SJpoyD6BihunNX7wTaE7mNA3a4EJdET7pWPHySmkpJV7LlJm
AiVW6D0bMppCxXaNXSP4BOJU2Sqcuz6F5mrlSy+bTyD//IyercdTaEI/aIDB
ZQKtHL1AxZg2hQLV34QMBE0gh7dMEvvKptCj5B63+dcTqEeoWF+4awrxVF/P
V6ueQBVEnlgljmn0ePLdUgb9JDoeWluqITWNUqnHrbuO7J0XujtDhprTyH3y
NPsVk0kUst4uc817Gm32clC/fr/Hq1uAqUfMNHr49769S+ckcp06cfdh3jSq
0M/WK2aaQmZ9Ud/ixqYRg7eBzKL7FKo1V596Qz2Dbni04mtZU0ilZZHzo8AM
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
ujSCBpQyjcdi55D1fUUbb9ZRlOEteTbAaQ5tDFg+cjw0ikwtLrAEwRySepv+
Xcd8FCWJOKSizllUzdg4pug6ivyu+ZrqBc0iC6dFRongUSTHJBAyqTKLQuTU
9OhKRtGrRA++nPQZNPXld1Ol4BgqCPpdyZk0jfwF1udzFcfQuKMm8Yb1NOJ7
IEBMMRxDq7bxX+glppGepoPpfb8xFB/CfvN70RQaSg/zcE4YQ4av+9/+fTSF
vJnzYywLxpBkwqe7rCZTKKtpp1NldAw9KeY4n7AyiTSPiW5KUowjokrOzen6
SdQbrcPHyzOOIlf5tVRTJhHbhSirtdPjqMtPcb3YeBK9+Vp0f/TKOHqvfDS2
T2YSqQn1Jbd7j6Mk3Rq3SdZJ5Dx8eDD/wziiOnG//fWvCdRv1clQUTeOGM/R
Cm7kTCDjjsfSP4fGUXxLVItH1AT6Zqho0rk7jnCdp1e4vCaQYsOo5zDvBAo4
uJ355/IEylCPSZo/MYGyte3mP+pOIIFSzZptgwkk8+hnZ/rJCRR+cmWC0WkC
XSB+cf8oNoGoc19z7A+cQB23PE4075tAHpKmCgdTJxDDhP7iLv0EGntFYyH9
dQ9Xyu7Yqa1xdIE//4FyxwR6bqCaH7QwjhqfX3mruTiB7mRrmP6bGEfAQfxp
xDaJdk68kdYaHkcfgyoXrA5PIvt3NLSfB8bRIWo3bkf1SaSOcewe7x9HL7yF
1W5fnEQxyYGvS/dkppWmK35ek+hAn/mg6eA4unfDN+hp9CR6vdBNuzU6jubG
ZLLjcybR86diX/NmxpG1dV/r24ZJNJzmzue9Oo5au8M2Po5MorOUn+POU00g
LVM1oXLKKbT2SJpoyD6BihunNX7wTaE7mNA3a4EJdET7pWPHySmkpJV7LlJm
AiVW6D0bMppCxXaNXSP4BOJU2Sqcuz6F5mrlSy+bTyD//IyercdTaEI/aIDB
ZQKtHL1AxZg2hQLV34QMBE0gh7dMEvvKptCj5B63+dcTqEeoWF+4awrxVF/P
V6ueQBVEnlgljmn0ePLdUgb9JDoeWluqITWNUqnHrbuO7J0XujtDhprTyH3y
NPsVk0kUst4uc817Gm32clC/fr/Hq1uAqUfMNHr49769S+ckcp06cfdh3jSq
0M/WK2aaQmZ9Ud/ixqYRg7eBzKL7FKo1V596Qz2Dbni04mtZU0ilZZHzo8AM
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
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 10}, {0., 4.5349652156346065`*^29}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 10}, {0., 4.5349652156346065`*^29}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
ujSCBpQyjcdi55D1fUUbb9ZRlOEteTbAaQ5tDFg+cjw0ikwtLrAEwRySepv+
Xcd8FCWJOKSizllUzdg4pug6ivyu+ZrqBc0iC6dFRongUSTHJBAyqTKLQuTU
9OhKRtGrRA++nPQZNPXld1Ol4BgqCPpdyZk0jfwF1udzFcfQuKMm8Yb1NOJ7
IEBMMRxDq7bxX+glppGepoPpfb8xFB/CfvN70RQaSg/zcE4YQ4av+9/+fTSF
vJnzYywLxpBkwqe7rCZTKKtpp1NldAw9KeY4n7AyiTSPiW5KUowjokrOzen6
SdQbrcPHyzOOIlf5tVRTJhHbhSirtdPjqMtPcb3YeBK9+Vp0f/TKOHqvfDS2
T2YSqQn1Jbd7j6Mk3Rq3SdZJ5Dx8eDD/wziiOnG//fWvCdRv1clQUTeOGM/R
Cm7kTCDjjsfSP4fGUXxLVItH1AT6Zqho0rk7jnCdp1e4vCaQYsOo5zDvBAo4
uJ355/IEylCPSZo/MYGyte3mP+pOIIFSzZptgwkk8+hnZ/rJCRR+cmWC0WkC
XSB+cf8oNoGoc19z7A+cQB23PE4075tAHpKmCgdTJxDDhP7iLv0EGntFYyH9
dQ9Xyu7Yqa1xdIE//4FyxwR6bqCaH7QwjhqfX3mruTiB7mRrmP6bGEfAQfxp
xDaJdk68kdYaHkcfgyoXrA5PIvt3NLSfB8bRIWo3bkf1SaSOcewe7x9HL7yF
1W5fnEQxyYGvS/dkppWmK35ek+hAn/mg6eA4unfDN+hp9CR6vdBNuzU6jubG
ZLLjcybR86diX/NmxpG1dV/r24ZJNJzmzue9Oo5au8M2Po5MorOUn+POU00g
LVM1oXLKKbT2SJpoyD6BihunNX7wTaE7mNA3a4EJdET7pWPHySmkpJV7LlJm
AiVW6D0bMppCxXaNXSP4BOJU2Sqcuz6F5mrlSy+bTyD//IyercdTaEI/aIDB
ZQKtHL1AxZg2hQLV34QMBE0gh7dMEvvKptCj5B63+dcTqEeoWF+4awrxVF/P
V6ueQBVEnlgljmn0ePLdUgb9JDoeWluqITWNUqnHrbuO7J0XujtDhprTyH3y
NPsVk0kUst4uc817Gm32clC/fr/Hq1uAqUfMNHr49769S+ckcp06cfdh3jSq
0M/WK2aaQmZ9Ud/ixqYRg7eBzKL7FKo1V596Qz2Dbni04mtZU0ilZZHzo8AM
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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 10}, {0., 4.5349652156346065`*^29}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 4.5349652156346065`*^29}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9526170387586946`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1c97e17c-53f3-4c8f-9adc-a1fc970607ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ClearAll"], "Input",
 CellChangeTimes->{{3.952618956737853*^9, 3.952618958040968*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5f1dd050-15cc-4837-ac3e-0add8984e23b"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{3.952618958421617*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6d2ff659-7a31-446f-beb2-9bae937b5c9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Sigma]", ",", "\[Mu]"}], "]"}]], "Input",
 CellChangeTimes->{{3.952618992432675*^9, 3.952618998756154*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"6db9de79-8379-44b8-9389-dc8b04dc1ea4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], "  ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]", "[", "t", "]"}], ")"}], "^", "2"}]}], ")"}], 
      "]"}]}], ")"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", " ", "-", " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]", "[", "t", "]"}], ")"}], "^", "2"}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.952618960480341*^9, 3.952619056090233*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"abc3346d-53cc-4e07-8f94-ac3b1ef7291c"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]}]]], "Output",
 CellChangeTimes->{{3.952619046295993*^9, 3.95261905686898*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"d085c268-0a6c-45bf-8bcb-83ba3de406da"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "]"}], "//", "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.9526190609847097`*^9, 3.952619068700828*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c6c45ba3-66df-469f-951d-5b10e22a281c"],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2", "]"}]}], "-", 
       RowBox[{"Log", "[", "\[Pi]", "]"}]}], ")"}]}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"\[Sigma]", "[", "t", "]"}], "]"}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]]}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.952619075144343*^9, 3.9526190772510767`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"4e302a8b-464b-45f9-b228-669b38ff6b73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "3"]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{"\[Sigma]", "[", "t", "]"}]]}], ")"}], "^", "2"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.952619084457583*^9, 3.952619090267839*^9}, {
  3.95261913083606*^9, 3.952619134959453*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"534cd6b5-00ee-4853-be8b-640dbca2976a"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Mu]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], 
  SuperscriptBox[
   RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]]], "Output",
 CellChangeTimes->{3.952619135271535*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"dec4bfae-9882-437b-ae47-02f091985f04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "*", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952619091316379*^9, 3.952619109318296*^9}, 
   3.952619144944042*^9, {3.952619188823584*^9, 3.952619190294211*^9}, 
   3.952619222477042*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"6c2c0aa1-2332-468b-86b9-9e531dbc61c6"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
      RowBox[{"(", 
        RowBox[{
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "4"], "+", 
          RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], "+", 
          RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]", MultilineFunction -> None], 
         "[", "t", "]"}], "2"]}], 
    RowBox[{
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "8"]}]], 
   RowBox[{
     RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], "]"}], "\[GreaterEqual]", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.952619120508835*^9, 3.9526191738481407`*^9, {3.9526192144191523`*^9, 
   3.95261923681217*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"8b967f8b-1174-4125-b6f3-01ce5e529b1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.952619176972639*^9, 3.952619180370901*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"22af98a0-7633-470c-bb17-04470a89653a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "4"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox[
        RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox[
        RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
      RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Mu]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "3"], " ", 
      RowBox[{
       SuperscriptBox["\[Mu]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.952619181145918*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"7bd164a6-90bc-42ea-9273-b8dbec4f0817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "*", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952619243149466*^9, 3.952619265312085*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"fed8e458-bcd5-47ac-b5f8-53e75f130185"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
     RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
       RowBox[{"(", 
         RowBox[{
           SuperscriptBox[
            RowBox[{"\[Mu]", "[", "t", "]"}], "3"], "+", 
           RowBox[{"3", " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]", MultilineFunction -> None], 
         "[", "t", "]"}], " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
             RowBox[{
               SuperscriptBox["\[Mu]", "\[Prime]", MultilineFunction -> None],
                "[", "t", "]"}]}], "-", 
           RowBox[{"2", " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
             RowBox[{
               SuperscriptBox[
               "\[Sigma]", "\[Prime]", MultilineFunction -> None], "[", "t", 
               "]"}]}]}], ")"}]}]}], 
   RowBox[{
     RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], "]"}], "\[GreaterEqual]", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.952619298174402*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b5383a3a-827c-41c8-ad24-442e5d931f87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Mu]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{"6", " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
          RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Mu]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
          RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "3"], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Mu]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
          RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "3"], " ", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Sigma]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], 
     ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952619270105843*^9, 3.952619288103467*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e0b0172f-39e4-4b1f-98b5-399b847b6ec2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", 
      RowBox[{
        SqrtBox[
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "8"]}]], 
     RowBox[{
       SqrtBox[
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             SuperscriptBox[
              RowBox[{"\[Sigma]", "[", "t", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{
                SuperscriptBox[
                "\[Mu]", "\[Prime]", MultilineFunction -> None], "[", "t", 
                "]"}], "2"]}], "-", 
           RowBox[{"2", " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
             RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 SuperscriptBox[
                  RowBox[{"\[Mu]", "[", "t", "]"}], "2"], "+", 
                 RowBox[{"3", " ", 
                   SuperscriptBox[
                    RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
             RowBox[{
               SuperscriptBox["\[Mu]", "\[Prime]", MultilineFunction -> None],
                "[", "t", "]"}], " ", 
             RowBox[{
               SuperscriptBox[
               "\[Sigma]", "\[Prime]", MultilineFunction -> None], "[", "t", 
               "]"}]}], "+", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"3", " ", 
                   SuperscriptBox[
                    RowBox[{"\[Mu]", "[", "t", "]"}], "4"]}], "+", 
                 RowBox[{"6", " ", 
                   SuperscriptBox[
                    RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
                SuperscriptBox[
                "\[Sigma]", "\[Prime]", MultilineFunction -> None], "[", "t", 
                "]"}], "2"]}]}], ")"}]}]}], 
   RowBox[{
     RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], "]"}], "\[GreaterEqual]", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.952619327272964*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"48dc44f4-b159-4fba-886d-d83859cc01aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Mu]", "[", "t", "]"}], "4"], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "8"]}]], " ", "+", " ", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "2", " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "3"], "+", 
      RowBox[{"3", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Sigma]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], " ", "+", 
   " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "8"]}]], 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Mu]", "[", "t", "]"}], "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Mu]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "4"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], "-", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.95261933106781*^9, 3.952619352290718*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"bca5e2af-8f1a-43cd-adf0-f1170d11afea"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Mu]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
  SqrtBox[
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]]], "Output",
 CellChangeTimes->{3.9526193526431713`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4c5d2fca-9875-4062-8bc6-20f64ae6afc4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2", "]"}]}], "-", 
       RowBox[{"Log", "[", "\[Pi]", "]"}]}], ")"}]}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"\[Sigma]", "[", "t", "]"}], "]"}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "-", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}]]}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.952620452749771*^9, 3.952620453203417*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"94587dd7-888e-4567-a553-4e61fb668f8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "-", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "-", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "3"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], 
     RowBox[{"\[Sigma]", "[", "t", "]"}]]}], ")"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.9526204596286383`*^9, 3.9526204605520906`*^9}, {
  3.952620528817889*^9, 3.95262053297283*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"0300bd89-10f1-430d-b1a0-4d3146dc0b03"],

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "-", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Mu]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "-", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], ")"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "3"]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], 
       RowBox[{"\[Sigma]", "[", "t", "]"}]]}], ")"}], "2"], ",", 
   RowBox[{"x", "[", "t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952620537192451*^9, 3.952620543761961*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"000f0b54-6d86-416d-9cfe-eafa5e296ddf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "-", 
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "5"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "-", 
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "3"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]]}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "5"]]}], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "2"], " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]], "+", 
      FractionBox[
       RowBox[{"6", " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "5"]], "+", 
      FractionBox[
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]]}], ")"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             SuperscriptBox["\[Mu]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]]}], "-", 
      FractionBox[
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "5"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "3"]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"\[Mu]", "[", "t", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "4"]]}], ")"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9526205485604563`*^9, 3.9526205700167923`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"37972f41-a396-447f-8bfc-2166b4a9218a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{"2", " ", 
    RowBox[{"x", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "5"]]}], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           SuperscriptBox["\[Mu]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
       RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Mu]", "[", "t", "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"\[Sigma]", "[", "t", "]"}], "6"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Mu]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Mu]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}], " ", 
      RowBox[{"\[Sigma]", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Mu]", "[", "t", "]"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "-", 
        RowBox[{
         SuperscriptBox["\[Mu]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "4"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Mu]", "[", "t", "]"}], "2"], "-", 
           SuperscriptBox[
            RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], ")"}], "2"]}], ")"}],
       " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.952620571142634*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"2cbcfbae-3025-43f3-8046-dfa401c70d4e"]
}, Open  ]]
},
WindowSize->{610.5, 507.75},
WindowMargins->{{-2.25, Automatic}, {Automatic, -22.5}},
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"642d1cef-46d0-4f72-bf72-3151605aaf4e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 744, 22, 51, "Input",ExpressionUUID->"8108cf98-d0ae-4a61-9189-c83e9ddd2c88"],
Cell[1301, 44, 463, 12, 30, "Input",ExpressionUUID->"83a0da8b-1354-4c93-bf50-846c5d65a4a8"],
Cell[1767, 58, 830, 24, 54, "Input",ExpressionUUID->"593c5aac-5d4f-423d-b955-bfcac5357fbf"],
Cell[2600, 84, 2635, 73, 252, "Input",ExpressionUUID->"eebdc3e1-5994-4f8c-bb40-cdb8dd546440"],
Cell[5238, 159, 2475, 73, 470, "Input",ExpressionUUID->"bf55ebea-7e6e-41f9-93d5-df495f4dfea6"],
Cell[CellGroupData[{
Cell[7738, 236, 849, 24, 53, "Input",ExpressionUUID->"6b7865b8-7ac7-4293-93ef-724542948249"],
Cell[8590, 262, 1490, 43, 83, "Output",ExpressionUUID->"5a70d00b-278c-4bdf-8506-891e5bacd714"]
}, Open  ]],
Cell[10095, 308, 4073, 116, 386, "Input",ExpressionUUID->"2c0ccf91-e737-4273-802a-06c36c167f83"],
Cell[CellGroupData[{
Cell[14193, 428, 3722, 98, 272, "Input",ExpressionUUID->"e8cf3272-32a8-433a-a7f1-8d00dfb75b10"],
Cell[17918, 528, 105995, 1782, 222, "Output",ExpressionUUID->"1c97e17c-53f3-4c8f-9adc-a1fc970607ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123950, 2315, 179, 2, 29, "Input",ExpressionUUID->"5f1dd050-15cc-4837-ac3e-0add8984e23b"],
Cell[124132, 2319, 156, 2, 33, "Output",ExpressionUUID->"6d2ff659-7a31-446f-beb2-9bae937b5c9b"]
}, Open  ]],
Cell[124303, 2324, 237, 4, 29, "Input",ExpressionUUID->"6db9de79-8379-44b8-9389-dc8b04dc1ea4"],
Cell[CellGroupData[{
Cell[124565, 2332, 910, 28, 51, "Input",ExpressionUUID->"abc3346d-53cc-4e07-8f94-ac3b1ef7291c"],
Cell[125478, 2362, 628, 19, 74, "Output",ExpressionUUID->"d085c268-0a6c-45bf-8bcb-83ba3de406da"]
}, Open  ]],
Cell[126121, 2384, 291, 6, 29, "Input",ExpressionUUID->"c6c45ba3-66df-469f-951d-5b10e22a281c"],
Cell[126415, 2392, 768, 23, 50, "Input",ExpressionUUID->"4e302a8b-464b-45f9-b228-669b38ff6b73"],
Cell[CellGroupData[{
Cell[127208, 2419, 1191, 34, 51, "Input",ExpressionUUID->"534cd6b5-00ee-4853-be8b-640dbca2976a"],
Cell[128402, 2455, 968, 28, 55, "Output",ExpressionUUID->"dec4bfae-9882-437b-ae47-02f091985f04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129407, 2488, 818, 22, 51, "Input",ExpressionUUID->"6c2c0aa1-2332-468b-86b9-9e531dbc61c6"],
Cell[130228, 2512, 1363, 39, 79, "Output",ExpressionUUID->"8b967f8b-1174-4125-b6f3-01ce5e529b1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131628, 2556, 1099, 30, 51, "Input",ExpressionUUID->"22af98a0-7633-470c-bb17-04470a89653a"],
Cell[132730, 2588, 6303, 180, 243, "Output",ExpressionUUID->"7bd164a6-90bc-42ea-9273-b8dbec4f0817"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139070, 2773, 1199, 32, 84, "Input",ExpressionUUID->"fed8e458-bcd5-47ac-b5f8-53e75f130185"],
Cell[140272, 2807, 1643, 45, 91, "Output",ExpressionUUID->"b5383a3a-827c-41c8-ad24-442e5d931f87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141952, 2857, 6081, 159, 280, "Input",ExpressionUUID->"e0b0172f-39e4-4b1f-98b5-399b847b6ec2"],
Cell[148036, 3018, 2571, 67, 121, "Output",ExpressionUUID->"48dc44f4-b159-4fba-886d-d83859cc01aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150644, 3090, 4105, 122, 259, "Input",ExpressionUUID->"bca5e2af-8f1a-43cd-adf0-f1170d11afea"],
Cell[154752, 3214, 716, 22, 68, "Output",ExpressionUUID->"4c5d2fca-9875-4062-8bc6-20f64ae6afc4"]
}, Open  ]],
Cell[155483, 3239, 800, 24, 50, "Input",ExpressionUUID->"94587dd7-888e-4567-a553-4e61fb668f8f"],
Cell[156286, 3265, 1402, 40, 51, "Input",ExpressionUUID->"0300bd89-10f1-430d-b1a0-4d3146dc0b03"],
Cell[157691, 3307, 1510, 42, 80, "Input",ExpressionUUID->"000f0b54-6d86-416d-9cfe-eafa5e296ddf"],
Cell[CellGroupData[{
Cell[159226, 3353, 8468, 244, 475, "Input",ExpressionUUID->"37972f41-a396-447f-8bfc-2166b4a9218a"],
Cell[167697, 3599, 6314, 187, 262, "Output",ExpressionUUID->"2cbcfbae-3025-43f3-8046-dfa401c70d4e"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

